{"version":3,"sources":["webpack:///./node_modules/lodash/reduce.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/_baseReduce.js","webpack:///./src/components/Body/Market/MarketHead.jsx"],"names":["arrayReduce","__webpack_require__","baseEach","baseIteratee","baseReduce","isArray","module","exports","collection","iteratee","accumulator","func","initAccum","arguments","length","array","index","eachFunc","value","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","lodash_reduce__WEBPACK_IMPORTED_MODULE_2__","lodash_reduce__WEBPACK_IMPORTED_MODULE_2___default","TableCell","lazy","e","then","t","bind","TableHead","TableRow","Tooltip","Typography","MarketHead","connect","_ref2","viewport","_ref","initialVW","Math","max","document","documentElement","clientWidth","window","innerWidth","columnAmount","width","a","createElement","style","height","reduce","tooltip","text","align","result","column","i","push","key","title","placement","fallback","color","fontWeight"],"mappings":"8EAAA,IAAAA,EAAkBC,EAAQ,KAC1BC,EAAeD,EAAQ,KACvBE,EAAmBF,EAAQ,KAC3BG,EAAiBH,EAAQ,KACzBI,EAAcJ,EAAQ,KA8CtBK,EAAAC,QAPA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAN,EAAAG,GAAAR,EAAAI,EACAQ,EAAAC,UAAAC,OAAA,EAEA,OAAAH,EAAAH,EAAAL,EAAAM,EAAA,GAAAC,EAAAE,EAAAV,uBCtBAI,EAAAC,QAbA,SAAAQ,EAAAN,EAAAC,EAAAE,GACA,IAAAI,GAAA,EACAF,EAAA,MAAAC,EAAA,EAAAA,EAAAD,OAKA,IAHAF,GAAAE,IACAJ,EAAAK,IAAAC,MAEAA,EAAAF,GACAJ,EAAAD,EAAAC,EAAAK,EAAAC,KAAAD,GAEA,OAAAL,sBCAAJ,EAAAC,QATA,SAAAC,EAAAC,EAAAC,EAAAE,EAAAK,GAMA,OALAA,EAAAT,EAAA,SAAAU,EAAAF,EAAAR,GACAE,EAAAE,GACAA,GAAA,EAAAM,GACAT,EAAAC,EAAAQ,EAAAF,EAAAR,KAEAE,qCCnBAT,EAAAkB,EAAAC,GAAA,IAAAC,EAAApB,EAAA,GAAAqB,EAAArB,EAAAsB,EAAAF,GAAAG,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAsB,EAAAE,GAIME,EAAYC,eAAK,kBAAM3B,EAAA4B,EAAA,GAAAC,KAAA7B,EAAA8B,EAAAC,KAAA,eACvBC,EAAYL,eAAK,kBAAM3B,EAAA4B,EAAA,IAAAC,KAAA7B,EAAA8B,EAAAC,KAAA,eACvBE,EAAWN,eAAK,kBAAM3B,EAAA4B,EAAA,GAAAC,KAAA7B,EAAA8B,EAAAC,KAAA,eACtBG,EAAUP,eAAK,kBAAM3B,EAAA4B,EAAA,GAAAC,KAAA7B,EAAA8B,EAAAC,KAAA,eACrBI,EAAaR,eAAK,kBAAM3B,EAAA4B,EAAA,GAAAC,KAAA7B,EAAA8B,EAAAC,KAAA,eAgDxBK,EAAaC,YAAQ,SAAAC,GAAA,MAAmB,CAAEC,SAArBD,EAAGC,WAA+B,KAA1CF,CA9CW,SAAAG,GAAkB,IAAfD,EAAeC,EAAfD,SAmB1BE,EAAYC,KAAKC,IAAIC,SAASC,gBAAgBC,YAAaC,OAAOC,YAAc,GAGhFC,GAFKV,EAASW,OAAST,GAEF,IAAO,EAAI,EAEtC,OACCpB,EAAA8B,EAAAC,cAACpB,EAAD,KACCX,EAAA8B,EAAAC,cAACnB,EAAD,CAAUoB,MAAO,CAAEC,OAAQ,QACzBC,IA1BY,CAAC,CAChBC,QAAO,qQACPC,KAAI,aACJC,MAAK,QACH,CACFF,QAAO,uVACPC,KAAI,eACJC,MAAK,SACH,CACFF,QAAO,wFACPC,KAAI,mBACJC,MAAK,SACH,CACFF,QAAO,0EACPC,KAAI,qBACJC,MAAK,UAWc,SAACC,EAAQC,EAAQC,GAYjC,OAXIA,EAAIZ,GACPU,EAAOG,KACNzC,EAAA8B,EAAAC,cAAC1B,EAAD,CAAWgC,MAAOE,EAAOF,MAAOK,IAAKH,EAAOH,MAC3CpC,EAAA8B,EAAAC,cAAClB,EAAD,CAAS8B,MAAOJ,EAAOJ,QAASS,UAAU,UACzC5C,EAAA8B,EAAAC,cAAChC,EAAA,SAAD,CAAU8C,SAAU7C,EAAA8B,EAAAC,cAAA,0BACnB/B,EAAA8B,EAAAC,cAACjB,EAAD,CAAYkB,MAAO,CAACc,MAAO,QAASC,WAAY,SAAUR,EAAOH,UAM/DE,GACL,QAOQvB","file":"static/js/29.ca85e8be62dbdb5a93d4.js","sourcesContent":["var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","import React, { lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport reduce from \"lodash/reduce\";\n\nconst TableCell = lazy(() => import(\"@material-ui/core/TableCell/TableCell\"));\nconst TableHead = lazy(() => import(\"@material-ui/core/TableHead/TableHead\"));\nconst TableRow = lazy(() => import(\"@material-ui/core/TableRow/TableRow\"));\nconst Tooltip = lazy(() => import(\"@material-ui/core/Tooltip/Tooltip\"));\nconst Typography = lazy(() => import(\"@material-ui/core/Typography/Typography\"));\n\nconst unconnectedMarketHead = ({ viewport }) => {\n\tconst columns = [{\n\t\ttooltip: `A market pair is defined by a base token and quote token. A ratio between a base token and quote token indicates how much of the quote token is needed to purchase one unit of the base token. These rates are rebased to DAI on Î£DEX for ease of interpretation. `,\n\t\ttext: `Base/Quote`,\n\t\talign: `left`,\n\t}, {\n\t\ttooltip: `The difference between the highest current bid ratio and the lowest current ask ratio across all exchanges for the given market pair. Negative values (where the lowest current ask is lower than the highest current bid) indicate potential arbitrage opportunities between exchanges. Substantial arbitrage opportunities are highlighted in red.`,\n\t\ttext: `Spread [DAI]`,\n\t\talign: `right`,\n\t}, {\n\t\ttooltip: `A volume-weighted sum of all exchanges' last traded ratios for the given market pair.`,\n\t\ttext: `Last Price [DAI]`,\n\t\talign: `right`,\n\t}, {\n\t\ttooltip: `A sum of all exchanges' past 24 hour volumes for the given market pair.`,\n\t\ttext: `Volume (24h) [DAI]`,\n\t\talign: `right`,\n\t}];\n\n\tconst initialVW = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\tconst vw = viewport.width || initialVW;\n\n\tconst columnAmount = (vw < 760) ? 2 : 4;\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow style={{ height: \"4vh\" }}>\n\t\t\t\t{reduce(columns, (result, column, i) => {\n\t\t\t\t\tif (i < columnAmount) {\n\t\t\t\t\t\tresult.push(\n\t\t\t\t\t\t\t<TableCell align={column.align} key={column.text}>\n\t\t\t\t\t\t\t\t<Tooltip title={column.tooltip} placement=\"bottom\">\n\t\t\t\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{color: \"black\", fontWeight: \"bold\"}}>{column.text}</Typography>\n\t\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}, [])}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nconst MarketHead = connect(({ viewport }) => ({ viewport }), null)(unconnectedMarketHead);\nexport default MarketHead;"],"sourceRoot":""}