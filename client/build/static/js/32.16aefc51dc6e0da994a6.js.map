{"version":3,"sources":["webpack:///./src/util/formatFunctions.js","webpack:///./src/components/Body/Pair/PairBody/MobilePairSpread.jsx"],"names":["__webpack_require__","d","__webpack_exports__","formatPrice","formatVolume","formatPercentage","price","sd","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","useGrouping","format","minimumSignificantDigits","maximumSignificantDigits","volume","percentage","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_util_formatFunctions__WEBPACK_IMPORTED_MODULE_1__","TableCell","lazy","e","then","t","bind","unconnectedMobilePairSpread","_ref","emd","lowAsk","highBid","innerBid","current_bid_dai","innerAsk","current_ask_dai","fontStyle","color","determineStyle","spreadString","concat","a","createElement","align"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAMF,EAAc,SAACG,GACpB,IAAMC,EAAK,SAACD,GACX,OAAIA,EAAQ,IACJ,EACGA,EAAQ,GACX,EACGA,EAAQ,EACX,EAEA,GAGT,OAAIA,EAAQ,KACH,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,EACvBC,YAAa,SACXC,OAAOT,GAEF,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVK,yBAA0BT,EAAGD,GAC7BW,yBAA0BV,EAAGD,GAC7BQ,YAAa,SACXC,OAAOT,IAINF,EAAe,SAACc,GACrB,OAAQ,IAAIV,KAAKC,aAAa,QAAS,CACtCC,MAAO,WAAYC,SAAU,MAAOG,YAAa,SAC/CC,OAAOG,IAGLb,EAAmB,SAACc,GACzB,OAAQ,IAAIX,KAAKC,aAAa,QAAS,CACtCC,MAAO,UAAWI,YAAa,OAAQD,sBAAuB,EAAGD,sBAAuB,IACtFG,OAAOI,sCCxCXnB,EAAAoB,EAAAlB,GAAA,IAAAmB,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,KAIMyB,EAAYC,eAAK,kBAAM1B,EAAA2B,EAAA,GAAAC,KAAA5B,EAAA6B,EAAAC,KAAA,eA+BdC,UAjBqB,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,IAAKC,EAAsBF,EAAtBE,OAAQC,EAAcH,EAAdG,QAC7CC,EAAWH,EAAII,gBACfC,EAAWL,EAAIM,gBAEf7B,EAhBgB,SAAC4B,EAAUF,EAAUF,EAAQC,GACnD,OAAIG,IAAaJ,GAAUE,IAAaD,EAChC,CAAEK,UAAW,SAAUC,MAAO,SAC3BH,IAAaJ,EAChB,CAAEO,MAAO,SACNL,IAAaD,EAChB,CAAEM,MAAO,OAET,GAQMC,CAAeJ,EAAUF,EAAUF,EAAQC,GACnDQ,EAAY,GAAAC,OAAMzC,YAAYiC,GAAlB,OAAAQ,OAAiCzC,YAAYmC,IAE/D,OACChB,EAAAuB,EAAAC,cAACrB,EAAD,CACCf,MAAOA,EACPqC,MAAM,SAELJ","file":"static/js/32.16aefc51dc6e0da994a6.js","sourcesContent":["const formatPrice = (price) => {\n\tconst sd = (price) => {\n\t\tif (price < 0.01) {\n\t\t\treturn 1;\n\t\t} else if (price < 0.1) {\n\t\t\treturn 2;\n\t\t} else if (price < 1) {\n\t\t\treturn 3;\n\t\t} else {\n\t\t\treturn 4;\n\t\t}\n\t};\n\tif (price < 0.001) {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tmaximumFractionDigits: 3,\n\t\t\tminimumFractionDigits: 3,\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t} else {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tminimumSignificantDigits: sd(price),\n\t\t\tmaximumSignificantDigits: sd(price),\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t}\n};\n\nconst formatVolume = (volume) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\", currency: \"USD\", useGrouping: \"true\"\n\t}).format(volume));\n};\n\nconst formatPercentage = (percentage) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"percent\", useGrouping: \"true\", minimumFractionDigits: 2, maximumFractionDigits: 2\n\t}).format(percentage));\n};\n\nexport {\n\tformatPrice, formatVolume, formatPercentage,\n};","import React, { lazy } from \"react\";\n\nimport { formatPrice } from \"../../../../util/formatFunctions\";\n\nconst TableCell = lazy(() => import(\"@material-ui/core/TableCell/TableCell\"));\n\nconst determineStyle = (innerAsk, innerBid, lowAsk, highBid) => {\n\tif (innerAsk === lowAsk && innerBid === highBid) {\n\t\treturn { fontStyle: \"italic\", color: \"green\" };\n\t} else if (innerAsk === lowAsk) {\n\t\treturn { color: \"green\" };\n\t} else if (innerBid === highBid) {\n\t\treturn { color: \"red\" };\n\t} else {\n\t\treturn { };\n\t}\n};\n\nconst unconnectedMobilePairSpread = ({ emd, lowAsk, highBid }) => {\n\tconst innerBid = emd.current_bid_dai;\n\tconst innerAsk = emd.current_ask_dai;\n\n\tconst style = determineStyle(innerAsk, innerBid, lowAsk, highBid);\n\tconst spreadString = `${formatPrice(innerBid)} - ${formatPrice(innerAsk)}`;\n\n\treturn (\n\t\t<TableCell\n\t\t\tstyle={style}\n\t\t\talign=\"right\"\n\t\t>\n\t\t\t{spreadString}\n\t\t</TableCell>\n\t);\n};\n\nexport default unconnectedMobilePairSpread;"],"sourceRoot":""}