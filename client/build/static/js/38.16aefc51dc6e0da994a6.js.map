{"version":3,"sources":["webpack:///./src/components/Body/Market/MarketBody/MarketBody.jsx"],"names":["MarketPairName","lazy","__webpack_require__","e","then","bind","MarketPairSpread","MarketPairLastPrice","MarketPairVolume","MobileMarketPairSpread","TableBody","t","TableRow","MarketBody","connect","_ref2","deltaY","viewport","actions","_ref","filteredMarketLength","slicedMarket","setDeltaY","setPage","initialVW","Math","max","document","documentElement","clientWidth","window","innerWidth","vw","width","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","onWheel","map","p","style","height","hover","onClick","_objectSpread","pages","PAIR","pair","key","concat","base_symbol","quote_symbol","Fragment","innerContent"],"mappings":"sQAMA,IAAMA,EAAiBC,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC5BC,EAAmBL,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC9BE,EAAsBN,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aACjCG,EAAmBP,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC9BI,EAAyBR,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAEpCK,EAAYT,eAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAS,EAAAN,KAAA,eACvBO,EAAWX,eAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAS,EAAAN,KAAA,eAoDtBQ,EAAaC,YAAQ,SAAAC,GAAA,MAA2B,CAAEC,OAA7BD,EAAGC,OAAkCC,SAArCF,EAAWE,WAAuCC,EAA1DJ,CAlDW,SAAAK,GAAkF,IAA/EC,EAA+ED,EAA/EC,qBAAsBC,EAAyDF,EAAzDE,aAAcL,EAA2CG,EAA3CH,OAAQM,EAAmCH,EAAnCG,UAAWC,EAAwBJ,EAAxBI,QAASN,EAAeE,EAAfF,SAE1FO,EAAYC,KAAKC,IAAIC,SAASC,gBAAgBC,YAAaC,OAAOC,YAAc,GAChFC,EAAKf,EAASgB,OAAST,EAwB7B,OACCU,EAAAC,EAAAC,cAAC1B,EAAD,CAAW2B,QATa,SAAClC,GACtBA,EAAEa,OAAS,GAAKA,EAAS,EAC3BM,EAAUN,EAAS,IACVb,EAAEa,OAAS,GAAMA,EAASI,EAAuB,IAC1DE,EAAUN,EAAS,MAMlBK,EAAaiB,IAAI,SAAAC,GACjB,OACCL,EAAAC,EAAAC,cAACxB,EAAD,CACC4B,MAAO,CAAEC,OAAQ,OACjBC,OAAK,EACLC,QAAS,WACRpB,oUAAOqB,CAAA,GACHC,IAAMC,KADH,CAENC,KAAMR,MAGRS,IAAG,GAAAC,OAAKV,EAAEW,YAAP,KAAAD,OAAsBV,EAAEY,eAnCX,SAACZ,GAAD,OAAQP,EAAK,IACjCE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACClB,EAAAC,EAAAC,cAACpC,EAAD,CAAgBuC,EAAGA,IACnBL,EAAAC,EAAAC,cAAC3B,EAAD,CAAwB8B,EAAGA,KAG5BL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACClB,EAAAC,EAAAC,cAACpC,EAAD,CAAgBuC,EAAGA,IACnBL,EAAAC,EAAAC,cAAC9B,EAAD,CAAkBiC,EAAGA,IACrBL,EAAAC,EAAAC,cAAC7B,EAAD,CAAqBgC,EAAGA,IACxBL,EAAAC,EAAAC,cAAC5B,EAAD,CAAkB+B,EAAGA,KA2BjBc,CAAad,SAUL1B","file":"static/js/38.16aefc51dc6e0da994a6.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../../../actions\";\nimport { pages } from \"../../../../model/pages\";\n\nconst MarketPairName = lazy(() => import(\"./MarketPairName\"));\nconst MarketPairSpread = lazy(() => import(\"./MarketPairSpread\"));\nconst MarketPairLastPrice = lazy(() => import(\"./MarketPairLastPrice\"));\nconst MarketPairVolume = lazy(() => import(\"./MarketPairVolume\"));\nconst MobileMarketPairSpread = lazy(() => import(\"./MobileMarketPairSpread\"));\n\nconst TableBody = lazy(() => import(\"@material-ui/core/TableBody/TableBody\"));\nconst TableRow = lazy(() => import(\"@material-ui/core/TableRow/TableRow\"));\n\nconst unconnectedMarketBody = ({ filteredMarketLength, slicedMarket, deltaY, setDeltaY, setPage, viewport }) => {\n\n\tconst initialVW = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\tconst vw = viewport.width || initialVW;\n\n\tconst innerContent = (p) => (vw < 760) ? (\n\t\t<>\n\t\t\t<MarketPairName p={p} />\n\t\t\t<MobileMarketPairSpread p={p} />\n\t\t</>\n\t) : (\n\t\t<>\n\t\t\t<MarketPairName p={p} />\n\t\t\t<MarketPairSpread p={p} />\n\t\t\t<MarketPairLastPrice p={p} />\n\t\t\t<MarketPairVolume p={p} />\n\t\t</>\n\t);\n\n\tconst handleWheelEvent = (e) => {\n\t\tif(e.deltaY < 0 && deltaY > 9) {\n\t\t\tsetDeltaY(deltaY - 10);\n\t\t} else if(e.deltaY > 0 && (deltaY < filteredMarketLength - 10)) {\n\t\t\tsetDeltaY(deltaY + 10);\n\t\t}\n\t};\n\n\treturn (\n\t\t<TableBody onWheel={handleWheelEvent}>\n\t\t\t{slicedMarket.map(p => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow\n\t\t\t\t\t\tstyle={{ height: \"4vh\" }}\n\t\t\t\t\t\thover\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetPage({\n\t\t\t\t\t\t\t\t...pages.PAIR,\n\t\t\t\t\t\t\t\tpair: p\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkey={`${p.base_symbol}/${p.quote_symbol}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{innerContent(p)}\n\t\t\t\t\t</TableRow>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TableBody>\n\t);\n};\n\nconst MarketBody = connect(({ deltaY, viewport }) => ({ deltaY, viewport }), actions)(unconnectedMarketBody);\n\nexport default MarketBody;"],"sourceRoot":""}