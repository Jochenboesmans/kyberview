{"version":3,"sources":["webpack:///./src/util/formatFunctions.js","webpack:///./node_modules/lodash/reduce.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/_baseReduce.js","webpack:///./src/components/Body/Market/MarketBody/MobileMarketPairSpread.jsx"],"names":["__webpack_require__","d","__webpack_exports__","formatPrice","formatVolume","formatPercentage","price","sd","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","useGrouping","format","minimumSignificantDigits","maximumSignificantDigits","volume","percentage","arrayReduce","baseEach","baseIteratee","baseReduce","isArray","module","exports","collection","iteratee","accumulator","func","initAccum","arguments","length","array","index","eachFunc","value","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_reduce__WEBPACK_IMPORTED_MODULE_1__","lodash_reduce__WEBPACK_IMPORTED_MODULE_1___default","_util_formatFunctions__WEBPACK_IMPORTED_MODULE_2__","TableCell","lazy","e","then","t","bind","unconnectedMobileMarketPairSpread","_ref","p","innerBid","reduce","market_data","max","emd","current_bid_dai","innerAsk","min","current_ask_dai","Number","MAX_VALUE","colorString","spreadString","concat","a","createElement","color","align"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAMF,EAAc,SAACG,GACpB,IAAMC,EAAK,SAACD,GACX,OAAIA,EAAQ,IACJ,EACGA,EAAQ,GACX,EACGA,EAAQ,EACX,EAEA,GAGT,OAAIA,EAAQ,KACH,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,EACvBC,YAAa,SACXC,OAAOT,GAEF,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVK,yBAA0BT,EAAGD,GAC7BW,yBAA0BV,EAAGD,GAC7BQ,YAAa,SACXC,OAAOT,IAINF,EAAe,SAACc,GACrB,OAAQ,IAAIV,KAAKC,aAAa,QAAS,CACtCC,MAAO,WAAYC,SAAU,MAAOG,YAAa,SAC/CC,OAAOG,IAGLb,EAAmB,SAACc,GACzB,OAAQ,IAAIX,KAAKC,aAAa,QAAS,CACtCC,MAAO,UAAWI,YAAa,OAAQD,sBAAuB,EAAGD,sBAAuB,IACtFG,OAAOI,yBCxCX,IAAAC,EAAkBpB,EAAQ,KAC1BqB,EAAerB,EAAQ,KACvBsB,EAAmBtB,EAAQ,KAC3BuB,EAAiBvB,EAAQ,KACzBwB,EAAcxB,EAAQ,KA8CtByB,EAAAC,QAPA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAN,EAAAG,GAAAP,EAAAG,EACAQ,EAAAC,UAAAC,OAAA,EAEA,OAAAH,EAAAH,EAAAL,EAAAM,EAAA,GAAAC,EAAAE,EAAAV,uBCtBAI,EAAAC,QAbA,SAAAQ,EAAAN,EAAAC,EAAAE,GACA,IAAAI,GAAA,EACAF,EAAA,MAAAC,EAAA,EAAAA,EAAAD,OAKA,IAHAF,GAAAE,IACAJ,EAAAK,IAAAC,MAEAA,EAAAF,GACAJ,EAAAD,EAAAC,EAAAK,EAAAC,KAAAD,GAEA,OAAAL,sBCAAJ,EAAAC,QATA,SAAAC,EAAAC,EAAAC,EAAAE,EAAAK,GAMA,OALAA,EAAAT,EAAA,SAAAU,EAAAF,EAAAR,GACAE,EAAAE,GACAA,GAAA,EAAAM,GACAT,EAAAC,EAAAQ,EAAAF,EAAAR,KAEAE,qCCnBA7B,EAAAsC,EAAApC,GAAA,IAAAqC,EAAAvC,EAAA,GAAAwC,EAAAxC,EAAAyC,EAAAF,GAAAG,EAAA1C,EAAA,KAAA2C,EAAA3C,EAAAyC,EAAAC,GAAAE,EAAA5C,EAAA,KAMM6C,EAAYC,eAAK,kBAAM9C,EAAA+C,EAAA,GAAAC,KAAAhD,EAAAiD,EAAAC,KAAA,eAqBdC,UAnB2B,SAAAC,GAAW,IAARC,EAAQD,EAARC,EACtCC,EAAWC,IAAOF,EAAEG,YAAa,SAACC,EAAKC,GAAN,OAAcA,EAAIC,gBAAkBF,EAAOC,EAAIC,gBAAkBF,GAAK,GACvGG,EAAWL,IAAOF,EAAEG,YAAa,SAACK,EAAKH,GAAN,OAAcA,EAAII,gBAAkBD,EAAMH,EAAII,gBAAkBD,GAAKE,OAAOC,WAI7GC,GAH0BL,EAAWN,EAAY,GAAM,KACrC,IAEsC,MAAQ,QAChEY,EAAY,GAAAC,OAAMhE,YAAYmD,GAAlB,OAAAa,OAAiChE,YAAYyD,IAC/D,OACCpB,EAAA4B,EAAAC,cAACxB,EAAD,CACCnC,MAAO,CAAE4D,MAAOL,GAChBM,MAAM,SAELL","file":"static/js/29.16aefc51dc6e0da994a6.js","sourcesContent":["const formatPrice = (price) => {\n\tconst sd = (price) => {\n\t\tif (price < 0.01) {\n\t\t\treturn 1;\n\t\t} else if (price < 0.1) {\n\t\t\treturn 2;\n\t\t} else if (price < 1) {\n\t\t\treturn 3;\n\t\t} else {\n\t\t\treturn 4;\n\t\t}\n\t};\n\tif (price < 0.001) {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tmaximumFractionDigits: 3,\n\t\t\tminimumFractionDigits: 3,\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t} else {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tminimumSignificantDigits: sd(price),\n\t\t\tmaximumSignificantDigits: sd(price),\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t}\n};\n\nconst formatVolume = (volume) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\", currency: \"USD\", useGrouping: \"true\"\n\t}).format(volume));\n};\n\nconst formatPercentage = (percentage) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"percent\", useGrouping: \"true\", minimumFractionDigits: 2, maximumFractionDigits: 2\n\t}).format(percentage));\n};\n\nexport {\n\tformatPrice, formatVolume, formatPercentage,\n};","var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","import React, { lazy } from \"react\";\n//import { connect } from \"react-redux\";\nimport reduce from \"lodash/reduce\";\n\nimport { formatPrice } from \"../../../../util/formatFunctions\";\n\nconst TableCell = lazy(() => import(\"@material-ui/core/TableCell/TableCell\"));\n\nconst unconnectedMobileMarketPairSpread = ({ p }) => {\n\tconst innerBid = reduce(p.market_data, (max, emd) => emd.current_bid_dai > max ?  emd.current_bid_dai : max, 0);\n\tconst innerAsk = reduce(p.market_data, (min, emd) => emd.current_ask_dai < min ? emd.current_ask_dai : min, Number.MAX_VALUE);\n\tconst spreadRatioDifference = ((innerAsk / innerBid) - 1) || 0;\n\tconst arbitrageLimit = -0.01;\n\n\tconst colorString = spreadRatioDifference <= arbitrageLimit ? \"red\" : \"black\";\n\tconst spreadString = `${formatPrice(innerBid)} - ${formatPrice(innerAsk)}`;\n\treturn (\n\t\t<TableCell\n\t\t\tstyle={{ color: colorString }}\n\t\t\talign=\"right\"\n\t\t>\n\t\t\t{spreadString}\n\t\t</TableCell>\n\t)\n};\n\n//const MobileMarketPairSpread = connect(null, null)(unconnectedMobileMarketPairSpread);\nexport default unconnectedMobileMarketPairSpread;"],"sourceRoot":""}