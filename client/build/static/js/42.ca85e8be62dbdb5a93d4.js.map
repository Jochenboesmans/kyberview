{"version":3,"sources":["webpack:///./src/components/Body/Pair/PairHead.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","TableCell","lazy","e","then","t","bind","TableHead","TableRow","Tooltip","Typography","PairHead","connect","_ref2","viewport","_ref","tableCells","p","columns","tooltip","concat","base_symbol","quote_symbol","text","align","initialVW","Math","max","document","documentElement","clientWidth","window","innerWidth","columnAmount","width","a","createElement","style","height","forEach","column","i","push","key","title","placement","fallback","color","fontWeight"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAGMO,EAAYC,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACvBC,EAAYL,eAAK,kBAAMR,EAAAS,EAAA,IAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACvBE,EAAWN,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACtBG,EAAUP,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACrBI,EAAaR,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eAsDxBK,EAAWC,YAAQ,SAAAC,GAAA,MAAmB,CAAEC,SAArBD,EAAGC,WAA+B,KAA1CF,CApDW,SAAAG,GAAqB,IA0BzCC,EA1BuBC,EAAkBF,EAAlBE,EAAGH,EAAeC,EAAfD,SAC3BI,EAAU,CAAC,CAChBC,QAAO,wBAAAC,OAA0BH,EAAEI,YAA5B,KAAAD,OAA2CH,EAAEK,aAA7C,0BACPC,KAAI,WACJC,MAAK,QACH,CACFL,QAAO,6FAAAC,OAA+FH,EAAEI,YAAjG,KAAAD,OAAgHH,EAAEK,aAAlH,sEAAAF,OAAmMH,EAAEK,aAArM,SAAAF,OAAyNH,EAAEI,YAA3N,yJAAAD,OAA8XH,EAAEK,aAAhY,SAAAF,OAAoZH,EAAEI,YAAtZ,KACPE,KAAI,eACJC,MAAK,SACH,CACFL,QAAO,4BAAAC,OAA8BH,EAAEK,aAAhC,gBAAAF,OAA2DH,EAAEI,YAA7D,yBACPE,KAAI,mBACJC,MAAK,SACH,CACFL,QAAO,0BAAAC,OAA4BH,EAAEI,YAA9B,KAAAD,OAA6CH,EAAEK,aAA/C,yBACPC,KAAI,qBACJC,MAAK,UAGAC,EAAYC,KAAKC,IAAIC,SAASC,gBAAgBC,YAAaC,OAAOC,YAAc,GAGhFC,GAFKnB,EAASoB,OAAST,GAEF,IAAO,EAAI,EAqBtC,OACC3B,EAAAqC,EAAAC,cAAC7B,EAAD,KACCT,EAAAqC,EAAAC,cAAC5B,EAAD,CAAU6B,MAAO,CAAEC,OAAQ,SAnBtBtB,EAAa,GACnBE,EAAQqB,QAAQ,SAACC,EAAQC,GACpBA,EAAIR,GACPjB,EAAW0B,KACV5C,EAAAqC,EAAAC,cAACnC,EAAD,CAAWuB,MAAOgB,EAAOhB,MAAOmB,IAAKH,EAAOjB,MAC3CzB,EAAAqC,EAAAC,cAAC3B,EAAD,CAASmC,MAAOJ,EAAOrB,QAAS0B,UAAU,UACzC/C,EAAAqC,EAAAC,cAACvC,EAAA,SAAD,CAAUiD,SAAUhD,EAAAqC,EAAAC,cAAA,0BACnBtC,EAAAqC,EAAAC,cAAC1B,EAAD,CAAY2B,MAAO,CAACU,MAAO,QAASC,WAAY,SAAUR,EAAOjB,YAOhEP,OAaML","file":"static/js/42.ca85e8be62dbdb5a93d4.js","sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst TableCell = lazy(() => import(\"@material-ui/core/TableCell/TableCell\"));\nconst TableHead = lazy(() => import(\"@material-ui/core/TableHead/TableHead\"));\nconst TableRow = lazy(() => import(\"@material-ui/core/TableRow/TableRow\"));\nconst Tooltip = lazy(() => import(\"@material-ui/core/Tooltip/Tooltip\"));\nconst Typography = lazy(() => import(\"@material-ui/core/Typography/Typography\"));\n\nconst unconnectedPairHead = ({ p, viewport }) => {\n\tconst columns = [{\n\t\ttooltip: `An exchange on which ${p.base_symbol}/${p.quote_symbol} is currently trading.`,\n\t\ttext: `Exchange`,\n\t\talign: `left`,\n\t}, {\n\t\ttooltip: `The difference between the highest current bid ratio and the lowest current ask ratio for ${p.base_symbol}/${p.quote_symbol}. The exchange with the most competitive price for buying/selling ${p.quote_symbol} for ${p.base_symbol} is highlighted in green/red respectively. Italic, green text indicates this exchange offers the most competitive prices for both buying and selling ${p.quote_symbol} for ${p.base_symbol}.`,\n\t\ttext: `Spread [DAI]`,\n\t\talign: `right`,\n\t}, {\n\t\ttooltip: `The last price for which ${p.quote_symbol} traded for ${p.base_symbol} on a given exchange.`,\n\t\ttext: `Last Price [DAI]`,\n\t\talign: `right`,\n\t}, {\n\t\ttooltip: `The 24-hour volume for ${p.base_symbol}/${p.quote_symbol} on a given exchange.`,\n\t\ttext: `Volume (24h) [DAI]`,\n\t\talign: `right`,\n\t}];\n\n\tconst initialVW = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\tconst vw = viewport.width || initialVW;\n\n\tconst columnAmount = (vw < 760) ? 2 : 4;\n\n\t// Further splitting definitely possible here.\n\tconst makeTableCells = () => {\n\t\tconst tableCells = [];\n\t\tcolumns.forEach((column, i) => {\n\t\t\tif (i < columnAmount) {\n\t\t\t\ttableCells.push(\n\t\t\t\t\t<TableCell align={column.align} key={column.text}>\n\t\t\t\t\t\t<Tooltip title={column.tooltip} placement=\"bottom\">\n\t\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t\t\t\t\t<Typography style={{color: \"black\", fontWeight: \"bold\"}}>{column.text}</Typography>\n\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</TableCell>\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t\treturn tableCells;\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow style={{ height: \"4vh\"}}>\n\t\t\t\t{makeTableCells()}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t)\n};\n\nconst PairHead = connect(({ viewport }) => ({ viewport }), null)(unconnectedPairHead);\nexport default PairHead;"],"sourceRoot":""}