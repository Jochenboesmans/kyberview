{"version":3,"sources":["webpack:///./src/components/Body/Market/TableNavigation.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","Grid","lazy","e","then","t","bind","Typography","IconButton","Promise","all","ChevronLeft","ChevronRight","TableNavigation","connect","_ref2","deltaY","setDeltaY","_ref","filteredMarketLength","a","createElement","container","direction","alignItems","justify","spacing","item","onClick","style","textAlign","variant","Math","min"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAGMO,EAAOC,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eAClBC,EAAaL,eAAK,kBAAMR,EAAAS,EAAA,GAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACxBE,EAAaN,eAAK,kBAAMO,QAAAC,IAAA,CAAAhB,EAAAS,EAAA,GAAAT,EAAAS,EAAA,GAAAT,EAAAS,EAAA,MAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACxBK,EAAcT,eAAK,kBAAMR,EAAAS,EAAA,IAAAC,KAAAV,EAAAW,EAAAC,KAAA,eACzBM,EAAeV,eAAK,kBAAMR,EAAAS,EAAA,IAAAC,KAAAV,EAAAW,EAAAC,KAAA,eAsC1BO,EAAkBC,YAAQ,SAAAC,GAAA,MAA4B,CAAEC,OAA9BD,EAAGC,OAAmCC,UAAtCF,EAAWE,YAAnBH,CAnCW,SAAAI,GAAiD,IAA9CC,EAA8CD,EAA9CC,qBAAsBH,EAAwBE,EAAxBF,OAAQC,EAAgBC,EAAhBD,UAIhE,OACInB,EAAAsB,EAAAC,cAACpB,EAAD,CACIqB,WAAS,EACTC,UAAU,MACVC,WAAW,SACXC,QAAQ,SACRC,QAAS,GAET5B,EAAAsB,EAAAC,cAACpB,EAAD,CAAM0B,MAAI,GACN7B,EAAAsB,EAAAC,cAACb,EAAD,CACIoB,QAbc,WAAWZ,EAAS,IAAM,GAAGC,EAAUD,EAAS,MAc9DlB,EAAAsB,EAAAC,cAACV,EAAD,QAGRb,EAAAsB,EAAAC,cAACpB,EAAD,CAAM0B,MAAI,GACN7B,EAAAsB,EAAAC,cAACd,EAAD,CACIsB,MAAO,CAACC,UAAW,UACnBC,QAAQ,WACP,EAAIf,EAHT,MAGoBgB,KAAKC,IAAIjB,EAAS,GAAIG,GAH1C,OAGqEA,IAGzErB,EAAAsB,EAAAC,cAACpB,EAAD,CAAM0B,MAAI,GACN7B,EAAAsB,EAAAC,cAACb,EAAD,CACIoB,QAzBe,WAAWZ,EAAS,GAAKG,GAAsBF,EAAUD,EAAS,MA0BjFlB,EAAAsB,EAAAC,cAACT,EAAD,WAQLC","file":"static/js/37.b484b3664017c7a403ae.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Grid = lazy(() => import(\"@material-ui/core/Grid/Grid\"));\nconst Typography = lazy(() => import(\"@material-ui/core/Typography/Typography\"));\nconst IconButton = lazy(() => import(\"@material-ui/core/IconButton/IconButton\"));\nconst ChevronLeft = lazy(() => import(\"@material-ui/icons/ChevronLeft\"));\nconst ChevronRight = lazy(() => import(\"@material-ui/icons/ChevronRight\"));\n\n\nconst unconnectedTableNavigation = ({ filteredMarketLength, deltaY, setDeltaY }) => {\n    const handleLeftButtonClick = () => { if(deltaY - 10 >= 0) setDeltaY(deltaY - 10) };\n    const handleRightButtonClick = () => { if(deltaY + 10 < filteredMarketLength) setDeltaY(deltaY + 10) };\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n            spacing={8}\n        >\n            <Grid item>\n                <IconButton\n                    onClick={handleLeftButtonClick}>\n                    <ChevronLeft/>\n                </IconButton>\n            </Grid>\n            <Grid item>\n                <Typography\n                    style={{textAlign: \"center\"}}\n                    variant=\"caption\">\n                    {1 + deltaY} - {Math.min(deltaY + 10, filteredMarketLength)} of {filteredMarketLength}\n                </Typography>\n            </Grid>\n            <Grid item>\n                <IconButton\n                    onClick={handleRightButtonClick}>\n                    <ChevronRight/>\n                </IconButton>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst TableNavigation = connect(({ deltaY, setDeltaY }) => ({ deltaY, setDeltaY }))(unconnectedTableNavigation);\nexport default TableNavigation;"],"sourceRoot":""}