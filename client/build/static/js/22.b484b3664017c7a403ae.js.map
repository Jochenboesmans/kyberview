{"version":3,"sources":["webpack:///./src/util/formatFunctions.js","webpack:///./src/components/Body/Market/MarketBody/MarketPairLastPrice.jsx"],"names":["__webpack_require__","d","__webpack_exports__","formatPrice","formatVolume","formatPercentage","price","sd","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","useGrouping","format","minimumSignificantDigits","maximumSignificantDigits","volume","percentage","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_reduce__WEBPACK_IMPORTED_MODULE_1__","lodash_reduce__WEBPACK_IMPORTED_MODULE_1___default","_util_formatFunctions__WEBPACK_IMPORTED_MODULE_2__","TableCell","lazy","e","then","t","bind","unconnectedMarketPairLastPrice","_ref","p","combinedVolume","reduce","market_data","sum","emd","volume_dai","volumeWeightedLastTraded","last_traded_dai","pairLastPrice","concat","a","createElement","align"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAMF,EAAc,SAACG,GACpB,IAAMC,EAAK,SAACD,GACX,OAAIA,EAAQ,IACJ,EACGA,EAAQ,GACX,EACGA,EAAQ,EACX,EAEA,GAGT,OAAIA,EAAQ,KACH,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,EACvBC,YAAa,SACXC,OAAOT,GAEF,IAAIE,KAAKC,aAAa,QAAS,CACtCC,MAAO,WACPC,SAAU,MACVK,yBAA0BT,EAAGD,GAC7BW,yBAA0BV,EAAGD,GAC7BQ,YAAa,SACXC,OAAOT,IAINF,EAAe,SAACc,GACrB,OAAQ,IAAIV,KAAKC,aAAa,QAAS,CACtCC,MAAO,WAAYC,SAAU,MAAOG,YAAa,SAC/CC,OAAOG,IAGLb,EAAmB,SAACc,GACzB,OAAQ,IAAIX,KAAKC,aAAa,QAAS,CACtCC,MAAO,UAAWI,YAAa,OAAQD,sBAAuB,EAAGD,sBAAuB,IACtFG,OAAOI,sCCxCXnB,EAAAoB,EAAAlB,GAAA,IAAAmB,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAuB,EAAAC,GAAAE,EAAA1B,EAAA,KAMM2B,EAAYC,eAAK,kBAAM5B,EAAA6B,EAAA,GAAAC,KAAA9B,EAAA+B,EAAAC,KAAA,eAgBdC,UAdwB,SAAAC,GAAW,IAARC,EAAQD,EAARC,EACnCC,EAAiBC,IAAOF,EAAEG,YAAa,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIC,YAAY,GAE3EC,EADwBL,IAAOF,EAAEG,YAAa,SAACC,EAAKC,GAAN,OAAcD,EAAOC,EAAIC,WAAaD,EAAIG,iBAAkB,GACtDP,GAAmB,EACvEQ,EAAa,GAAAC,OAAM1C,YAAYuC,IAErC,OACCpB,EAAAwB,EAAAC,cAACpB,EAAD,CAAWqB,MAAM,SACfJ","file":"static/js/22.b484b3664017c7a403ae.js","sourcesContent":["const formatPrice = (price) => {\n\tconst sd = (price) => {\n\t\tif (price < 0.01) {\n\t\t\treturn 1;\n\t\t} else if (price < 0.1) {\n\t\t\treturn 2;\n\t\t} else if (price < 1) {\n\t\t\treturn 3;\n\t\t} else {\n\t\t\treturn 4;\n\t\t}\n\t};\n\tif (price < 0.001) {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tmaximumFractionDigits: 3,\n\t\t\tminimumFractionDigits: 3,\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t} else {\n\t\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\t\tstyle: \"currency\",\n\t\t\tcurrency: \"USD\",\n\t\t\tminimumSignificantDigits: sd(price),\n\t\t\tmaximumSignificantDigits: sd(price),\n\t\t\tuseGrouping: \"true\"\n\t\t}).format(price));\n\t}\n};\n\nconst formatVolume = (volume) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\", currency: \"USD\", useGrouping: \"true\"\n\t}).format(volume));\n};\n\nconst formatPercentage = (percentage) => {\n\treturn (new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"percent\", useGrouping: \"true\", minimumFractionDigits: 2, maximumFractionDigits: 2\n\t}).format(percentage));\n};\n\nexport {\n\tformatPrice, formatVolume, formatPercentage,\n};","import React, { lazy } from \"react\";\n//import { connect } from \"react-redux\";\nimport reduce from \"lodash/reduce\";\n\nimport { formatPrice } from \"../../../../util/formatFunctions\";\n\nconst TableCell = lazy(() => import(\"@material-ui/core/TableCell/TableCell\"));\n\nconst unconnectedMarketPairLastPrice = ({ p }) => {\n\tconst combinedVolume = reduce(p.market_data, (sum, emd) => sum + emd.volume_dai, 0);\n\tconst weightedSumLastTraded = reduce(p.market_data, (sum, emd) => sum + (emd.volume_dai * emd.last_traded_dai), 0);\n\tconst volumeWeightedLastTraded = (weightedSumLastTraded / combinedVolume) || 0;\n\tconst pairLastPrice = `${formatPrice(volumeWeightedLastTraded)}`;\n\n\treturn (\n\t\t<TableCell align=\"right\">\n\t\t\t{pairLastPrice}\n\t\t</TableCell>\n\t)\n};\n\n//const MarketPairLastPrice = connect(null, null)(unconnectedMarketPairLastPrice);\nexport default unconnectedMarketPairLastPrice;"],"sourceRoot":""}